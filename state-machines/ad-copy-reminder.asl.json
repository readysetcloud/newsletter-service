{
  "Comment": "Send an email reminder to the sponsor of the newsletter",
  "StartAt": "Get Next Issue Sponsor",
  "States": {
    "Get Next Issue Sponsor": {
      "Type": "Task",
      "Resource": "${LambdaInvoke}",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${GetNextIssueDate}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Has Sponsor?"
    },
    "Has Sponsor?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Payload.slot",
          "IsPresent": true,
          "Next": "Load Sponsor Details"
        }
      ],
      "Default": "Nothing To Do"
    },
    "Load Sponsor Details": {
      "Type": "Task",
      "Resource": "${DynamodbGetItem}",
      "Parameters": {
        "TableName": "${TableName}",
        "Key": {
          "pk": {
            "S.$": "$.Payload.slot.sponsor"
          },
          "sk": {
            "S": "sponsor"
          }
        }
      },
      "Next": "Sponsor details found?",
      "ResultPath": "$.detail"
    },
    "Sponsor details found?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.detail.Item",
          "IsPresent": true,
          "Next": "Send Sponsor Email"
        }
      ],
      "Default": "Notify Admin Sponsor Data is Missing"
    },
    "Send Sponsor Email": {
      "Type": "Task",
      "Resource": "${EventBridgePutEvents}",
      "Parameters": {
        "Entries": [
          {
            "Detail": {
              "to": {
                "email.$": "$.detail.Item.contact.email"
              },
              "subject.$": "States.Format('Serverless Picks of the Week Ad Copy Reminder ({})', $.Payload.slot.date)",
              "text.$": "States.Format('Happy Wednesday {}!\r\rThis is a friendly reminder to submit your ad copy for your upcoming sponsored ad in the Serverless Picks of the Week newsletter by Friday at 8pm CST. \r\n\r\nFor the issue released on {}, you can send your ad copy by replying to this email. If you want to use the same copy as the previous issue, no further action is required. \r\n\r\nIf you have an issues meeting the deadline or have any other questions, please let me know as soon as possible.\r\n\r\nHave a great rest of your week!\r\n\r\nAllen Helton', $.detail.Item.contact.name, $.Payload.slot.date)",
              "tenantId.$": "$.tenantId"
            },
            "DetailType": "Send Email v2",
            "Source": "newsletter-service"
          }
        ]
      },
      "ResultPath": null,
      "Next": "Success"
    },
    "Notify Admin Sponsor Data is Missing": {
      "Type": "Task",
      "Resource": "${EventBridgePutEvents}",
      "Parameters": {
        "Entries": [
          {
            "Detail": {
              "to": {
                "email": "${AdminEmail}"
              },
              "subject": "[Ready, Set, Cloud] Invalid Newsletter Sponsor",
              "text.$": "States.Format('Oh man. The newsletter is configured with a sponsor ({}) who does not exist in the database. Go add the details to sponsors.json and rerun the workflow for the SendAdCopyReminderStateMachine.', $.Payload.slot.sponsor)",
              "tenantId.$": "$.tenantId"
            },
            "DetailType": "Send Email v2",
            "Source": "newsletter-service"
          }
        ]
      },
      "ResultPath": null,
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    },
    "Nothing To Do": {
      "Type": "Succeed"
    }
  }
}
